@attribute [CascadingTypeParameter(nameof(TItem))]
@typeparam TItem

<CascadingValue Value="_provider" IsFixed>
    @ChildContent?.Invoke(_provider)

    <datalist id="@_provider.Id">
        @foreach (var item in _provider.Items)
        {
            <option value="@ProvideItemValue(item)">
                @ProvideItemText(item)
            </option>
        }
    </datalist>
</CascadingValue>

@code {
    private DataListProvider<TItem> _provider;

    public DataList()
    {
        _provider = new(Id, Items);
        ProvideItemText = item => item?.ToString();
        ProvideItemValue = item => item?.ToString();
    }

    [Parameter, Description("Content to be rendered.")]
    public RenderFragment<IDataListProvider<TItem>>? ChildContent { get; set; }

    [Parameter, Description("Unique identifier. Auto-generated by default.")]
    public string Id { get; set; } = Guid.NewGuid().ToString();

    [Parameter, Description("Items that make up the data list.")]
    public IEnumerable<TItem> Items { get; set; } = [];

    protected override void OnParametersSet()
        => _provider = new(Id, Items);

    [Parameter, Description("Used to determine item text. Defaults to <code>ToString()</code> of the item.")]
    public Func<TItem, string?> ProvideItemText { get; set; }

    [Parameter, Description("Used to determine item value. Defaults to <code>ToString()</code> of the item.")]
    public Func<TItem, object?> ProvideItemValue { get; set; }
}
