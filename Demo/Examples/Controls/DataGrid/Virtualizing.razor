<DataGrid ItemsProvider="ItemsProvider" OverscanCount="25" Virtualize>
    <DataGridExpressionColumn Value="item => item.Id">
        <Placeholder>
            <span>...</span>
        </Placeholder>
    </DataGridExpressionColumn>
    @* omitted other columns because they're the same as in the example above *@
</DataGrid>

@code {
    private DataGridItemsProvider<Item> ItemsProvider => async request =>
    {
        await Task.Delay(100);
        var items = Items.Skip(request.StartIndex).Take(request.Count).ToArray();

        // return this overload for unbound virtualization (i.e. total count unknown); used in example
        return new(items, reachedEnd: items.Length < request.Count);

        // return this overload when the total count is known, so grid height can be fixed
        // return new(items, totalItemCount: 1_000);
    };
}