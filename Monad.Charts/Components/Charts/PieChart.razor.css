@property --offset-percentage {
    inherits: false;
    initial-value: 0;
    syntax: '<number>';
}

@property --value-percentage {
    inherits: false;
    initial-value: 0;
    syntax: '<number>';
}

.pie-chart {
    display: flex;
    justify-content: center;
}

    .pie-chart > .pie {
        --total: 0;
        aspect-ratio: 1;
        height: 100%;
        position: relative;
    }

        .pie-chart > .pie > .pie-slice {
            --offset: 0;
            --value: 0;
            --offset-percentage: calc(var(--offset) / var(--total));
            --value-percentage: calc(var(--value) / var(--total));
            --percentage-lt-25: round(up, .25 - var(--value-percentage));
            --percentage-gt-25: calc(1 - var(--percentage-lt-25));
            --percentage-lt-50: round(up, .50 - var(--value-percentage));
            --percentage-gt-50: calc(1 - var(--percentage-lt-50));
            --percentage-lt-75: round(up, .75 - var(--value-percentage));
            --percentage-gt-75: calc(1 - var(--percentage-lt-75));
            --percentage-angle: calc(var(--value-percentage) * 360 - (90 * (var(--percentage-gt-25) + var(--percentage-gt-50) + var(--percentage-gt-75))));
            --percentage-angle-alpha: calc((90 - var(--percentage-angle)) * .01745329251);
            --percentage-angle-beta: calc(var(--percentage-angle) * .01745329251);
            --position-alpha: calc(sin(var(--percentage-angle-alpha)) * 50%);
            --position-beta: calc(sin(var(--percentage-angle-beta)) * 50%);
            border-radius: 50%;
            clip-path: polygon(50% 50%, 50% 0%, 100% 0%, max(50% + var(--position-beta), var(--percentage-gt-25) * 100%) calc(50% - var(--position-alpha) * var(--percentage-lt-25)), max(50%, var(--percentage-gt-25) * 100%) max(50%, var(--percentage-gt-25) * 100%), max(50% + var(--position-alpha) * var(--percentage-gt-25), var(--percentage-gt-50) * 100%) max(50% + var(--position-beta) * var(--percentage-gt-25) * var(--percentage-lt-50), var(--percentage-gt-50) * 100%), max(0%, var(--percentage-lt-50) * 50%) max(50%, var(--percentage-gt-50) * 100%), min(50% - var(--position-beta) * var(--percentage-gt-75), 0%) calc(50% + var(--position-alpha) * var(--percentage-gt-50) * var(--percentage-lt-75)), max(0%, var(--percentage-lt-75) * 50%) max(0%, var(--percentage-lt-75) * 50%), calc(50% - var(--position-alpha) * var(--percentage-gt-75)) calc(50% - var(--position-beta) * var(--percentage-gt-75)));
            inset: 0;
            position: absolute;
            transform: rotate(calc(var(--offset-percentage) * 1turn));
            transform-origin: center;
        }
